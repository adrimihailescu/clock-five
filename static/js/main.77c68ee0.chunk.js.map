{"version":3,"sources":["features/counter/counterSlice.js","features/session/sessionSlice.js","features/break/breakSlice.js","features/styles.js","features/counter/Counter.js","features/session/Session.js","features/break/Break.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["counterSlice","createSlice","name","initialState","isSession","isCounting","reducers","toggleSession","state","toggleTimer","toggleStop","actions","counterIsCounting","toggleBreak","counter","counterIsSession","sessionSlice","value","increment","decrement","toggleReset","sessionLength","session","breakSlice","breakLength","break","useStyles","makeStyles","clock","backgroundcolor","backgroundImage","minHeight","width","alignItems","justifyContent","fontFamily","padding","margin","paper","border","borderRadius","bbackgroundColor","backgroundColor","textAlign","paperFix","typography","fontSize","color","fontWeight","header","title","titleBreak","count","main","display","height","app","grid1","grid2","button","Counter","classes","dispatch","useDispatch","useSelector","breakLengthState","sessionLengthState","counterIsCountingState","useState","seconds","setSeconds","minutes","setMinutes","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","CssBaseline","Paper","className","elevation","Grid","container","direction","grid","Typography","variant","toString","length","ButtonGroup","Button","size","onClick","toggleResetSession","toggleResetBreak","Session","sessionLeng","aligh","component","disabled","Break","breakLeng","align","App","md","store","configureStore","reducer","counterReducer","breakReducer","sessionReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qQAOaA,EAAeC,YAAY,CACvCC,KAAM,UACNC,aAPoB,CACpBC,WAAW,EACXC,YAAY,GAOZC,SAAU,CACTC,cAAe,SAACC,GACfA,EAAMJ,WAAaI,EAAMJ,WAE1BK,YAAa,SAACD,GACbA,EAAMH,YAAcG,EAAMH,YAE3BK,WAAY,SAACF,GACZA,EAAMH,YAAa,MAQf,EACNL,EAAaW,QADCF,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,WAAYH,EAAjC,EAAiCA,cAG3BK,GAHN,EAAgDC,YAGtB,SAACL,GAAD,OAAWA,EAAMM,QAAQT,aAC7CU,EAAmB,SAACP,GAAD,OAAWA,EAAMM,QAAQV,WAE1CJ,IAAf,QC3BagB,EAAef,YAAY,CACvCC,KAAM,UACNC,aANoB,CACpBc,MAAO,IAMPX,SAAU,CACTY,UAAW,SAACV,GACXA,EAAMS,OAAS,GAEhBE,UAAW,SAACX,GACXA,EAAMS,OAAS,GAEhBG,YAAa,SAACZ,GACbA,EAAMS,MAAQ,OAKV,EAA8CD,EAAaL,QAAnDO,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,UAAWC,EAA9B,EAA8BA,YAExBC,EAAgB,SAACb,GAAD,OAAWA,EAAMc,QAAQL,OAEvCD,IAAf,QCpBaO,EAAatB,YAAY,CACrCC,KAAM,QACNC,aANoB,CACpBc,MAAO,GAMPX,SAAU,CACTY,UAAW,SAACV,GACXA,EAAMS,OAAS,GAEhBE,UAAW,SAACX,GACXA,EAAMS,OAAS,GAEhBG,YAAa,SAACZ,GACbA,EAAMS,MAAQ,MAKV,EAA8CM,EAAWZ,QAAjDO,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,UAAWC,EAA9B,EAA8BA,YAExBI,EAAc,SAAChB,GAAD,OAAWA,EAAMiB,MAAMR,OAEnCM,IAAf,Q,2ECoEeG,EA5FGC,YAAW,CAC5BC,MAAO,CACNC,gBAAiB,UACjBC,gBAAiB,oDACjBC,UAAW,OACXC,MAAO,OACPC,WAAY,SACZC,eAAgB,SAChBC,WAAY,uBACZC,QAAS,IACTC,OAAQ,KAGTC,MAAO,CACNC,OAAQ,kBACRC,aAAc,OACdJ,QAAS,OACTK,iBAAkB,UAClBX,gBAAiB,mDAEjBI,eAAgB,SAChB,UAAW,CACVQ,gBAAiB,UACjBZ,gBAAiB,oDAElBa,UAAW,UAEZC,SAAU,CAETP,OAAQ,QAETQ,WAAY,CACXC,SAAU,OAEVC,MAAO,QACPC,WAAY,MACZb,WAAY,wBAEbc,OAAQ,CACPN,UAAW,SACXI,MAAO,YACPZ,WAAY,wBAEbe,MAAO,CACNJ,SAAU,OACVC,MAAO,QACPC,WAAY,MACZb,WAAY,wBAEbgB,WAAY,CACXJ,MAAO,OAERK,MAAO,CACNL,MAAO,OAKRM,KAAM,CACLC,QAAS,OACTjB,OAAQ,OACRK,gBAAiB,UACjBZ,gBAAiB,mDACjBU,aAAc,OACdP,WAAY,SACZG,QAAS,OACTmB,OAAQ,QAETC,IAAK,CACJb,UAAW,UAEZc,MAAO,CACNvB,eAAgB,SAChBD,WAAY,UAGbyB,MAAO,CACNzB,WAAY,SACZC,eAAgB,UAGjBT,MAAO,CACNW,QAAS,QAEVd,QAAS,CACRc,QAAS,QAEVuB,OAAQ,CACPzB,eAAgB,mB,OCtCX,SAAS0B,IACf,IAAMC,EAAUnC,IACVoC,EAAWC,cAEX3D,EAAY4D,YAAYjD,GACxBkD,EAAmBD,YAAYxC,GAC/B0C,EAAqBF,YAAY3C,GACjC8C,EAAyBH,YAAYpD,GAE3C,EAA8BwD,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAASF,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAgCA,OA9DD,SAAqBC,EAAUC,GAC9B,IAAMC,EAAgBC,mBAGtBC,qBAAU,WACTF,EAAcG,QAAUL,IACtB,CAACA,IAGJI,qBAAU,WAIT,GAAc,OAAVH,EAAgB,CACnB,IAAIK,EAAKC,aAJV,WACCL,EAAcG,YAGaJ,GAC3B,OAAO,kBAAMO,cAAcF,OAE1B,CAACL,IAeJQ,EACC,YACKX,GAAWF,KACVA,EAAU,IACG,IAAZE,GAA6B,IAAZF,GAInBG,EAHIpE,EAGO6D,EAFAC,GAIZJ,EAASvD,KACT+D,EAAWD,EAAU,IAErBC,EAAWD,EAAU,IAGP,IAAZA,IACHG,EAAWD,EAAU,GACrBD,EAAW,QAIdH,EAAyB,IAAO,MAIjCU,qBAAU,WACTL,EAAWN,KACT,CAACA,IAGH,qCACC,cAACiB,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAOC,UAAWxB,EAAQvB,MAAOgD,UAAW,GAA5C,SACC,eAACC,EAAA,EAAD,CACCC,WAAS,EACTC,UAAU,SACVvD,eAAe,SACfD,WAAW,SACXoD,UAAWxB,EAAQ6B,KALpB,UAOC,cAACH,EAAA,EAAD,CAAME,UAAU,MAAhB,SACC,cAACE,EAAA,EAAD,CACCC,QAAQ,KACRP,UAAWjF,EAAYyD,EAAQX,MAAQW,EAAQV,WAFhD,SAIE/C,EAAY,UAAY,YAG3B,cAACmF,EAAA,EAAD,CAAME,UAAU,MAAMJ,UAAWxB,EAAQjB,SAAzC,SACC,eAAC+C,EAAA,EAAD,CACCC,QAAQ,KACRb,GAAG,cACHM,UAAWjF,EAAYyD,EAAQhB,WAAagB,EAAQT,MAHrD,UAKgC,IAA9BmB,EAAQsB,WAAWC,OAAnB,WAAsCvB,GAAYA,EALpD,IAMgC,IAA9BF,EAAQwB,WAAWC,OAAnB,WAAsCzB,GAAYA,OAGrD,cAACkB,EAAA,EAAD,UACC,eAACQ,EAAA,EAAD,WACC,eAACC,EAAA,EAAD,CACCjB,GAAG,aACHa,QAAQ,WACRK,KAAK,QACLlD,MAAM,UACNmD,QAAS,kBAAMpC,EAASrD,MALzB,UAOC,cAAC,IAAD,IACA,cAAC,IAAD,4BAGD,cAACuF,EAAA,EAAD,CAAQJ,QAAQ,WAAWK,KAAK,QAAQlD,MAAM,UAA9C,SACC,cAAC,IAAD,CACCgC,GAAG,QACHmB,QAAS,WACRpC,EAASqC,KACTrC,EAASpD,KACToD,EAASsC,KACT9B,EAAW,GACXE,EAAWN,IAPb,kC,sCC1HD,SAASmC,IACf,IAAMxC,EAAUnC,IACV4E,EAActC,YAAY3C,GAC1ByC,EAAWC,cAEjB,OACC,qCACC,cAACoB,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,CAAOC,UAAWxB,EAAQvB,MAAOgD,UAAW,GAA5C,SACC,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAA1B,UACC,cAACF,EAAA,EAAD,CAAME,UAAU,MAAhB,SACC,eAACE,EAAA,EAAD,CAAYC,QAAQ,KAAKW,MAAM,SAASlB,UAAWxB,EAAQX,MAA3D,UACE,IADF,sBAKD,eAACqC,EAAA,EAAD,CAAME,UAAU,MAAhB,UACC,cAACF,EAAA,EAAD,UACC,cAACI,EAAA,EAAD,CAAYa,UAAU,KAAKnB,UAAWxB,EAAQhB,WAA9C,SACEyD,MAGH,cAACf,EAAA,EAAD,CAAME,UAAU,MAAMJ,UAAWxB,EAAQF,OAAzC,SACC,eAACoC,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,CACCJ,QAAQ,WACRK,KAAK,QACLlD,MAAM,YACN0D,SAA0B,IAAhBH,EAJX,SAMC,cAAC,IAAD,CAAYJ,QAAS,kBAAMpC,EAAS3C,MAApC,iBAKD,cAAC6E,EAAA,EAAD,CAAQJ,QAAQ,WAAWK,KAAK,QAAQlD,MAAM,UAA9C,SACC,cAAC,IAAD,CAASmD,QAAS,kBAAMpC,EAAS5C,MAAjC,iCCtCF,SAASwF,IACf,IAAM7C,EAAUnC,IACViF,EAAY3C,YAAYxC,GACxBsC,EAAWC,cACjB,OACC,qCACC,cAACoB,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAOC,UAAWxB,EAAQvB,MAAOgD,UAAW,GAA5C,SACC,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAA1B,UACC,cAACF,EAAA,EAAD,CAAME,UAAU,MAAhB,SACC,cAACE,EAAA,EAAD,CAAYC,QAAQ,KAAKgB,MAAM,SAASvB,UAAWxB,EAAQX,MAA3D,4BAID,cAACqC,EAAA,EAAD,UACC,cAACI,EAAA,EAAD,CAAYa,UAAU,KAAKnB,UAAWxB,EAAQhB,WAA9C,SACE8D,MAGH,cAACpB,EAAA,EAAD,CAAME,UAAU,MAAhB,SACC,eAACM,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,CACCJ,QAAQ,WACRK,KAAK,QACLlD,MAAM,YACN0D,SAAwB,IAAdE,EAJX,SAMC,cAAC,IAAD,CACC,aAAW,kBACXT,QAAS,kBAAMpC,EAAS3C,MAFzB,iBAQD,cAAC6E,EAAA,EAAD,CAAQJ,QAAQ,WAAW7C,MAAM,UAAUkD,KAAK,QAAhD,SACC,cAAC,IAAD,CACC,aAAW,kBACXC,QAAS,kBAAMpC,EAAS5C,MAFzB,8B,MCMO2F,OAhDf,WACC,IAAMhD,EAAUnC,IAChB,OACC,qCACC,cAACyD,EAAA,EAAD,IAEA,uBAAME,UAAWxB,EAAQjC,MAAzB,UACC,cAAC+D,EAAA,EAAD,CAAYC,QAAQ,KAAKP,UAAWxB,EAAQZ,OAA5C,wBAGA,cAACmC,EAAA,EAAD,CAAOC,UAAWxB,EAAQR,KAAMiC,UAAW,GAA3C,SACC,eAACC,EAAA,EAAD,CACCC,WAAS,EACTC,UAAU,MACVxD,WAAW,SACXoD,UAAWxB,EAAQL,IAJpB,UAMC,eAAC+B,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMJ,UAAWxB,EAAQJ,MAAnD,UACC,cAAC8B,EAAA,EAAD,CACCC,WAAS,EACTC,UAAU,SACVqB,GAAI,EACJzB,UAAWxB,EAAQpC,MAJpB,SAMC,cAACiF,EAAD,MAED,cAACnB,EAAA,EAAD,CACCC,WAAS,EACTC,UAAU,SACVqB,GAAI,EACJzB,UAAWxB,EAAQvC,QAJpB,SAMC,cAAC+E,EAAD,SAIF,cAACd,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMJ,UAAWxB,EAAQH,MAAnD,SACC,cAAC6B,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASqB,GAAI,EAAvC,SACC,cAAClD,EAAD,oBCzCKmD,GAAQC,YAAe,CACnCC,QAAS,CACRnG,QAASoG,EACTzF,MAAO0F,EACP7F,QAAS8F,KCGSC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,IAAD,CAAUb,MAAOA,GAAjB,SACC,cAAC,GAAD,QAGFc,SAASC,eAAe,SDoHnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAClCA,EAAaC,kB","file":"static/js/main.77c68ee0.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n\tisSession: true,\n\tisCounting: false, //for play/stop button\n};\n\nexport const counterSlice = createSlice({\n\tname: \"counter\",\n\tinitialState,\n\t// The `reducers` field lets us define reducers and generate associated actions\n\treducers: {\n\t\ttoggleSession: (state) => {\n\t\t\tstate.isSession = !state.isSession;\n\t\t},\n\t\ttoggleTimer: (state) => {\n\t\t\tstate.isCounting = !state.isCounting;\n\t\t},\n\t\ttoggleStop: (state) => {\n\t\t\tstate.isCounting = false;\n\t\t},\n\t\t// toggleBreak: (state) => {\n\t\t// \tstate.isBreak = !state.isBreak;\n\t\t// },\n\t},\n});\n\nexport const { toggleTimer, toggleStop, toggleSession, toggleBreak } =\n\tcounterSlice.actions;\n\nexport const counterIsCounting = (state) => state.counter.isCounting;\nexport const counterIsSession = (state) => state.counter.isSession;\n\nexport default counterSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n\tvalue: 25,\r\n};\r\n\r\nexport const sessionSlice = createSlice({\r\n\tname: \"session\",\r\n\tinitialState,\r\n\treducers: {\r\n\t\tincrement: (state) => {\r\n\t\t\tstate.value += 1;\r\n\t\t},\r\n\t\tdecrement: (state) => {\r\n\t\t\tstate.value -= 1;\r\n\t\t},\r\n\t\ttoggleReset: (state) => {\r\n\t\t\tstate.value = 25;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { increment, decrement, toggleReset } = sessionSlice.actions;\r\n\r\nexport const sessionLength = (state) => state.session.value;\r\n\r\nexport default sessionSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n\tvalue: 5,\r\n};\r\n\r\nexport const breakSlice = createSlice({\r\n\tname: \"break\",\r\n\tinitialState,\r\n\treducers: {\r\n\t\tincrement: (state) => {\r\n\t\t\tstate.value += 1;\r\n\t\t},\r\n\t\tdecrement: (state) => {\r\n\t\t\tstate.value -= 1;\r\n\t\t},\r\n\t\ttoggleReset: (state) => {\r\n\t\t\tstate.value = 5;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { increment, decrement, toggleReset } = breakSlice.actions;\r\n\r\nexport const breakLength = (state) => state.break.value;\r\n\r\nexport default breakSlice.reducer;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n\tclock: {\r\n\t\tbackgroundcolor: \"#55efc4\",\r\n\t\tbackgroundImage: \"linear-gradient(-315deg, #55efc4 0%, #000000 74%)\",\r\n\t\tminHeight: \"100%\",\r\n\t\twidth: \"100%\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tfontFamily: \"Orbitron, sans-serif\",\r\n\t\tpadding: \"0\",\r\n\t\tmargin: \"0\",\r\n\t},\r\n\r\n\tpaper: {\r\n\t\tborder: \"1px solid green\",\r\n\t\tborderRadius: \"40px\",\r\n\t\tpadding: \"20px\",\r\n\t\tbbackgroundColor: \"#9eabe4\",\r\n\t\tbackgroundImage: \"linear-gradient(315deg, #9eabe4 0%, #77eed8 74%)\",\r\n\r\n\t\tjustifyContent: \"center\",\r\n\t\t\"&:hover\": {\r\n\t\t\tbackgroundColor: \"#deebdd\",\r\n\t\t\tbackgroundImage: \"linear-gradient(315deg, #deebdd 0%, #bbdbbe 74%)\",\r\n\t\t},\r\n\t\ttextAlign: \"center\",\r\n\t},\r\n\tpaperFix: {\r\n\t\t// padding: \"10px\",\r\n\t\tmargin: \"10px\",\r\n\t},\r\n\ttypography: {\r\n\t\tfontSize: \"60px\",\r\n\t\t// padding: \"10px\",\r\n\t\tcolor: \"green\",\r\n\t\tfontWeight: \"500\",\r\n\t\tfontFamily: \"Orbitron, sans-serif\",\r\n\t},\r\n\theader: {\r\n\t\ttextAlign: \"center\",\r\n\t\tcolor: \"limegreen\",\r\n\t\tfontFamily: \"Orbitron, sans-serif\",\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: \"40px\",\r\n\t\tcolor: \"green\",\r\n\t\tfontWeight: \"500\",\r\n\t\tfontFamily: \"Orbitron, sans-serif\",\r\n\t},\r\n\ttitleBreak: {\r\n\t\tcolor: \"red\",\r\n\t},\r\n\tcount: {\r\n\t\tcolor: \"red\",\r\n\t},\r\n\t// timer: {\r\n\t// \tfontSize: \"40px\",\r\n\t// },\r\n\tmain: {\r\n\t\tdisplay: \"grid\",\r\n\t\tmargin: \"30px\",\r\n\t\tbackgroundColor: \"#55efc4\",\r\n\t\tbackgroundImage: \"linear-gradient(315deg, #55efc4 0%, #000000 74%)\",\r\n\t\tborderRadius: \"20px\",\r\n\t\talignItems: \"center\",\r\n\t\tpadding: \"10px\",\r\n\t\theight: \"100%\",\r\n\t},\r\n\tapp: {\r\n\t\ttextAlign: \"center\",\r\n\t},\r\n\tgrid1: {\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\t// padding: \"10px\",\r\n\t},\r\n\tgrid2: {\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\t// padding: \"10px\",\r\n\t},\r\n\tbreak: {\r\n\t\tpadding: \"10px\",\r\n\t},\r\n\tsession: {\r\n\t\tpadding: \"10px\",\r\n\t},\r\n\tbutton: {\r\n\t\tjustifyContent: \"space-between\",\r\n\t},\r\n});\r\n\r\nexport default useStyles;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n\ttoggleTimer,\r\n\ttoggleStop,\r\n\ttoggleSession,\r\n\tcounterIsCounting,\r\n\tcounterIsSession,\r\n} from \"./counterSlice\";\r\nimport {\r\n\tsessionLength,\r\n\ttoggleReset as toggleResetSession,\r\n} from \"../session/sessionSlice\";\r\nimport {\r\n\ttoggleReset as toggleResetBreak,\r\n\tbreakLength,\r\n} from \"../break/breakSlice\";\r\n\r\nimport {\r\n\tCssBaseline,\r\n\tPaper,\r\n\tTypography,\r\n\tButton,\r\n\tButtonGroup,\r\n\tGrid,\r\n} from \"@material-ui/core\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\nimport useStyles from \"../styles\";\r\n\r\n// source: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\r\nfunction useInterval(callback, delay) {\r\n\tconst savedCallback = useRef();\r\n\r\n\t// Remember the latest callback.\r\n\tuseEffect(() => {\r\n\t\tsavedCallback.current = callback;\r\n\t}, [callback]);\r\n\r\n\t// Set up the interval.\r\n\tuseEffect(() => {\r\n\t\tfunction tick() {\r\n\t\t\tsavedCallback.current();\r\n\t\t}\r\n\t\tif (delay !== null) {\r\n\t\t\tlet id = setInterval(tick, delay);\r\n\t\t\treturn () => clearInterval(id);\r\n\t\t}\r\n\t}, [delay]);\r\n}\r\n\r\nexport function Counter() {\r\n\tconst classes = useStyles();\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst isSession = useSelector(counterIsSession);\r\n\tconst breakLengthState = useSelector(breakLength);\r\n\tconst sessionLengthState = useSelector(sessionLength);\r\n\tconst counterIsCountingState = useSelector(counterIsCounting);\r\n\r\n\tconst [seconds, setSeconds] = useState(0);\r\n\tconst [minutes, setMinutes] = useState(sessionLengthState);\r\n\r\n\tuseInterval(\r\n\t\t() => {\r\n\t\t\tif (minutes || seconds) {\r\n\t\t\t\tif (seconds > 0) {\r\n\t\t\t\t\tif (minutes === 0 && seconds === 1) {\r\n\t\t\t\t\t\tif (!isSession) {\r\n\t\t\t\t\t\t\tsetMinutes(sessionLengthState);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsetMinutes(breakLengthState);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdispatch(toggleSession());\r\n\t\t\t\t\t\tsetSeconds(seconds - 1);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetSeconds(seconds - 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (seconds === 0) {\r\n\t\t\t\t\tsetMinutes(minutes - 1);\r\n\t\t\t\t\tsetSeconds(59);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcounterIsCountingState ? 1000 : null\r\n\t);\r\n\r\n\t//Display the session lenght in the timer! this is the version that works!!!\r\n\tuseEffect(() => {\r\n\t\tsetMinutes(sessionLengthState);\r\n\t}, [sessionLengthState]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<Paper className={classes.paper} elevation={24}>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\tcontainer\r\n\t\t\t\t\tdirection=\"column\"\r\n\t\t\t\t\tjustifyContent=\"center\"\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tclassName={classes.grid}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid direction=\"row\">\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant=\"h2\"\r\n\t\t\t\t\t\t\tclassName={isSession ? classes.title : classes.titleBreak}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{isSession ? \"Session\" : \"Break\"}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid direction=\"row\" className={classes.paperFix}>\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant=\"h3\"\r\n\t\t\t\t\t\t\tid=\"timer-label\"\r\n\t\t\t\t\t\t\tclassName={isSession ? classes.typography : classes.count}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{minutes.toString().length === 1 ? `0${minutes}` : minutes}:\r\n\t\t\t\t\t\t\t{seconds.toString().length === 1 ? `0${seconds}` : seconds}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t<ButtonGroup>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tid=\"start_stop\"\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tonClick={() => dispatch(toggleTimer())}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<PlayArrowIcon />\r\n\t\t\t\t\t\t\t\t<PauseIcon>Play/Pause</PauseIcon>\r\n\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" size=\"small\" color=\"primary\">\r\n\t\t\t\t\t\t\t\t<RefreshIcon\r\n\t\t\t\t\t\t\t\t\tid=\"reset\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tdispatch(toggleResetSession());\r\n\t\t\t\t\t\t\t\t\t\tdispatch(toggleStop());\r\n\t\t\t\t\t\t\t\t\t\tdispatch(toggleResetBreak());\r\n\t\t\t\t\t\t\t\t\t\tsetSeconds(0);\r\n\t\t\t\t\t\t\t\t\t\tsetMinutes(sessionLengthState);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tReset\r\n\t\t\t\t\t\t\t\t</RefreshIcon>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Paper>\r\n\t\t</>\r\n\t);\r\n}\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n\tCssBaseline,\r\n\tButton,\r\n\tButtonGroup,\r\n\tTypography,\r\n\tPaper,\r\n\tGrid,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\n\r\nimport { decrement, increment, sessionLength } from \"./sessionSlice\";\r\nimport useStyles from \"../styles\";\r\n\r\nexport function Session() {\r\n\tconst classes = useStyles();\r\n\tconst sessionLeng = useSelector(sessionLength);\r\n\tconst dispatch = useDispatch();\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<CssBaseline />\r\n\r\n\t\t\t<Paper className={classes.paper} elevation={24}>\r\n\t\t\t\t<Grid container direction=\"column\">\r\n\t\t\t\t\t<Grid direction=\"row\">\r\n\t\t\t\t\t\t<Typography variant=\"h2\" aligh=\"center\" className={classes.title}>\r\n\t\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t\tSession length\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid direction=\"row\">\r\n\t\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t\t<Typography component=\"h3\" className={classes.typography}>\r\n\t\t\t\t\t\t\t\t{sessionLeng}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid direction=\"row\" className={classes.button}>\r\n\t\t\t\t\t\t\t<ButtonGroup>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\t\tdisabled={sessionLeng === 1}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<RemoveIcon onClick={() => dispatch(decrement())}>\r\n\t\t\t\t\t\t\t\t\t\t-\r\n\t\t\t\t\t\t\t\t\t</RemoveIcon>\r\n\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t<Button variant=\"outlined\" size=\"small\" color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t<AddIcon onClick={() => dispatch(increment())}>+</AddIcon>\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Paper>\r\n\t\t</>\r\n\t);\r\n}\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { breakLength, decrement, increment } from \"./breakSlice\";\r\nimport {\r\n\tCssBaseline,\r\n\tTypography,\r\n\tButton,\r\n\tButtonGroup,\r\n\tPaper,\r\n\tGrid,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport useStyles from \"../styles\";\r\n\r\nexport function Break() {\r\n\tconst classes = useStyles();\r\n\tconst breakLeng = useSelector(breakLength);\r\n\tconst dispatch = useDispatch();\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<Paper className={classes.paper} elevation={24}>\r\n\t\t\t\t<Grid container direction=\"column\">\r\n\t\t\t\t\t<Grid direction=\"row\">\r\n\t\t\t\t\t\t<Typography variant=\"h2\" align=\"center\" className={classes.title}>\r\n\t\t\t\t\t\t\tBreak length\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t<Typography component=\"h3\" className={classes.typography}>\r\n\t\t\t\t\t\t\t{breakLeng}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid direction=\"row\">\r\n\t\t\t\t\t\t<ButtonGroup>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\tdisabled={breakLeng === 1}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<RemoveIcon\r\n\t\t\t\t\t\t\t\t\taria-label=\"Decrement value\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => dispatch(decrement())}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t-\r\n\t\t\t\t\t\t\t\t</RemoveIcon>\r\n\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" color=\"primary\" size=\"small\">\r\n\t\t\t\t\t\t\t\t<AddIcon\r\n\t\t\t\t\t\t\t\t\taria-label=\"Increment value\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => dispatch(increment())}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t+\r\n\t\t\t\t\t\t\t\t</AddIcon>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Paper>\r\n\t\t</>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport { Typography, Grid, CssBaseline, Paper } from \"@material-ui/core\";\r\nimport { Counter } from \"./features/counter/Counter\";\r\nimport { Session } from \"./features/session/Session\";\r\nimport { Break } from \"./features/break/Break\";\r\nimport \"./App.css\";\r\nimport useStyles from \"./features/styles\";\r\n\r\nfunction App() {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<CssBaseline />\r\n\r\n\t\t\t<main className={classes.clock}>\r\n\t\t\t\t<Typography variant=\"h1\" className={classes.header}>\r\n\t\t\t\t\t25+5 Clock\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Paper className={classes.main} elevation={24}>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\tclassName={classes.app}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Grid container direction=\"row\" className={classes.grid1}>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\tdirection=\"column\"\r\n\t\t\t\t\t\t\t\tmd={4}\r\n\t\t\t\t\t\t\t\tclassName={classes.break}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Break />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\tdirection=\"column\"\r\n\t\t\t\t\t\t\t\tmd={4}\r\n\t\t\t\t\t\t\t\tclassName={classes.session}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Session />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container direction=\"row\" className={classes.grid2}>\r\n\t\t\t\t\t\t\t<Grid container direction=\"column\" md={6}>\r\n\t\t\t\t\t\t\t\t<Counter />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</main>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"../features/counter/counterSlice\";\nimport breakReducer from \"../features/break/breakSlice\";\nimport sessionReducer from \"../features/session/sessionSlice\";\n\nexport const store = configureStore({\n\treducer: {\n\t\tcounter: counterReducer,\n\t\tbreak: breakReducer,\n\t\tsession: sessionReducer,\n\t},\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}